<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.insee.rmes</groupId>
	<artifactId>metadata-api</artifactId>
	<packaging>war</packaging>
	<name>Implementation of the RMéS metadata API</name>
	
	<version>3.2.1</version>
	
	<properties>
		<title>API RM\u00e9S</title>
		<description>API sur les m\u00e9tadonn\u00e9es de l'Insee</description>
	
		<!--  Dependencies' version -->
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<jersey.version>2.29.1</jersey.version>
		<jackson.version>2.10.1</jackson.version>
		<jakarta.version>4.0.3</jakarta.version>
		<log.version>2.17.1</log.version>
		<swagger.version>2.0.10</swagger.version>
		<junit.version>5.7.0</junit.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
				
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		
		<!-- Configuration Sonar -->
		<sonar.exclusions>src/main/java/fr/insee/rmes/queries/**/*,
			src/main/java/fr/insee/rmes/modeles/**/*</sonar.exclusions>
		<sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
		<sonar.projectName>Metadata-API</sonar.projectName>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>
        <version.maven-jacoco>0.8.5</version.maven-jacoco>
		<version.maven-sonar>3.7.0.1746</version.maven-sonar>
		<argLine>-Xms256m -Xmx512m -ea -Dfile.encoding=UTF-8</argLine>

	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!--  App Cache -->
		<dependency>
		    <groupId>org.ehcache</groupId>
		    <artifactId>ehcache</artifactId>
		    <version>3.10.0</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.glassfish.jaxb</groupId>
		    		<artifactId>jaxb-runtime</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>


		<!-- LOGS -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<version>${log.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j18-impl</artifactId>
			<version>${log.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
    		<groupId>org.junit.jupiter</groupId>
    		<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
    		<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>3.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.1.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Test API -->
		<dependency>
			<groupId>org.glassfish.jersey.test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- No compatibility between Junit5 and jerseyTest -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- Bind csv into POJOs -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- XML mapping -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${jakarta.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>
							jersey-container-servlet-core
						</artifactId>
					<groupId>org.glassfish.jersey.containers</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.5</version>
		</dependency>


		<!-- Freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.28</version><!-- change in FreemarkerConfig too -->
		</dependency>
		
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-text</artifactId>
		    <version>1.9</version>
		</dependency>

	</dependencies>


	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		  <resources>
		    <resource>
		      <directory>src/main/resources</directory>
		      <filtering>true</filtering>
		    </resource>
  		  </resources>   
  		<plugins>
  		    <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-war-plugin</artifactId>
	            <version>3.3.2</version>
	        </plugin>
			<plugin>
			    <groupId>org.sonarsource.scanner.maven</groupId>
			    <artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
			    <groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>test</phase>
						<goals>
				    		<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>	
  		</plugins>  
  		  
  		  
		<pluginManagement>
			<plugins>

				<!-- Pour l'exécution des tests unitaires -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<!-- https://carlobertoldi.wordpress.com/2012/03/12/maven-unit-tests-and-those-funny-characters/ -->
				<configuration>
       				 <junitArtifactName>junit:junit</junitArtifactName>
        			<encoding>UTF-8</encoding>
       				 <inputEncoding>UTF-8</inputEncoding>
        			<outputEncoding>UTF-8</outputEncoding>
					<!-- permet la surcharge de maven-surefire-plugin tout en fonctionnant avec jacoco -->
					<!-- <argLine>${argLine}</argLine>	MAVEN surcharge with properties	 -->
    			</configuration>

				<executions>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<includes>
								<include>**/*Test.java</include>
							</includes>
							<encoding>UTF-8</encoding>
						</configuration>

					</execution>
				</executions>
			</plugin>
				
				
				<plugin>
                	<groupId>org.sonarsource.scanner.maven</groupId>
                	<artifactId>sonar-maven-plugin</artifactId>
                	<version>${version.maven-sonar}</version>
            	</plugin>
				
	
				<!-- Plugin pour prise en compte des tests sur SonarQube plate-forme innovation -->
				<plugin>
					<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${version.maven-jacoco}</version>
						<executions>
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>report</phase>
								<goals>
									<goal>report-aggregate</goal>
								</goals>
							</execution>
						</executions>
				</plugin>
				
				<!-- Generate openapi.json , see : https://github.com/openapi-tools/swagger-maven-plugin-->
			    <plugin>
			      <groupId>io.openapitools.swagger</groupId>
			      <artifactId>swagger-maven-plugin</artifactId>
			      <version>2.1.5</version>
			      <configuration>
			        <resourcePackages>
	          		  <resourcePackage>fr.insee.rmes.api</resourcePackage>
			        </resourcePackages>
			        <useResourcePackagesChildren>true</useResourcePackagesChildren>
			        <outputDirectory>target/</outputDirectory>
			        <outputFilename>openapi</outputFilename>
			        <outputFormats>JSON,YAML</outputFormats>
			        <prettyPrint>true</prettyPrint>
			        <applicationClass>fr.insee.rmes.config</applicationClass>
			        <encoding>UTF-8</encoding>	        
			      </configuration>
			      <executions>
			        <execution>
			          <goals>
			            <goal>generate</goal>
			          </goals>
			        </execution>
			      </executions>
			    </plugin>    
			</plugins>
		 </pluginManagement>
	</build>
</project>
